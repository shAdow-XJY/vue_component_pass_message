"use strict";(self["webpackChunkvue_pass_message"]=self["webpackChunkvue_pass_message"]||[]).push([[809],{3809:function(a,t,n){n.r(t),n.d(t,{default:function(){return b}});var e=n(3396),s=n(7139);const r=a=>((0,e.dD)("data-v-56ebd2b5"),a=a(),(0,e.Cn)(),a),i={class:"border"},c=r((()=>(0,e._)("h3",null,"父组件",-1)));function o(a,t,n,r,o,u){const d=(0,e.up)("childPage");return(0,e.wg)(),(0,e.iD)("div",i,[c,(0,e._)("h3",null,"子组件通过emit 传给 父组件 信息: "+(0,s.zw)(o.passData),1),(0,e.Wm)(d,{onPassDataString:u.updateFunction},null,8,["onPassDataString"])])}const u=a=>((0,e.dD)("data-v-653c8445"),a=a(),(0,e.Cn)(),a),d={class:"border"},p=u((()=>(0,e._)("h3",null,"子组件",-1))),l=(0,e.Uk)(" 只需要父子组件中的函数名都是命名为passDataString(或其他)一样就行, 子组件中调用this.$emit('passDataString',数据)， 父组件调用子组件时v-on:passDataString = 函数名(e)，e即为子组件传来的‘数据’ ");function g(a,t,n,s,r,i){return(0,e.wg)(),(0,e.iD)("div",d,[p,(0,e._)("h3",{onClick:t[0]||(t[0]=(...a)=>s.toParent&&s.toParent(...a))},"点击！！传给父组件的参数为：我就是传过来的参数"),l])}var _={name:"childPage_emit",setup(a,t){const n=()=>{t.emit("passDataString","我就是传过来的参数")};return{toParent:n}}},h=n(89);const v=(0,h.Z)(_,[["render",g],["__scopeId","data-v-653c8445"]]);var D=v,m={name:"parentPage_emit",components:{childPage:D},data(){return{passData:""}},methods:{updateFunction(a){this.passData=a}}};const P=(0,h.Z)(m,[["render",o],["__scopeId","data-v-56ebd2b5"]]);var b=P}}]);
//# sourceMappingURL=809.2290ca34.js.map